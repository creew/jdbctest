package org.example.entity;

import org.example.annotations.JdbcAutoGenerated;
import org.example.annotations.JdbcField;
import org.example.annotations.JdbcTable;

import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.Map;

public class Entity {
    public static Map<String, String> getNamesAndField(Class<?> clazz) {
        Map<String, String> map = new HashMap<>();
        Field[] fields = clazz.getDeclaredFields();
        for (Field field : fields) {
            if (field.isAnnotationPresent(JdbcField.class) && !field.isAnnotationPresent(JdbcAutoGenerated.class)) {
                JdbcField jdbcField = field.getAnnotation(JdbcField.class);
                map.put(jdbcField.name(), field.getName());
            }
        }
        return map;
    }

    public static Map<String, String> getNamesAndTypes(Class<?> clazz) {
        Map<String, String> map = new HashMap<>();
        Field[] fields = clazz.getDeclaredFields();
        for (Field field : fields) {
            if (field.isAnnotationPresent(JdbcField.class)) {
                JdbcField jdbcField = field.getAnnotation(JdbcField.class);
                map.put(jdbcField.name(), jdbcField.type());
            }
        }
        return map;
    }

    public Object getValue(String name) throws NoSuchFieldException, IllegalAccessException {
        Class<?> clazz = this.getClass();
        Field field = clazz.getDeclaredField(name);
        field.setAccessible(true);
        return field.get(this);
    }

    public void setValue(String name, Object value) throws NoSuchFieldException, IllegalAccessException {
        Class<?> clazz = this.getClass();
        Field field = clazz.getDeclaredField(name);
        field.setAccessible(true);
        field.set(this, value);
    }

    public static String getTableName(Class<?> clazz) {
        return clazz.getAnnotation(JdbcTable.class).table();
    }
}
