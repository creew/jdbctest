package org.example.entity;

import org.example.annotation.*;
import org.example.exception.EntityException;

import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.Map;

public final class Entities {

    private Entities() {
    }

    public static Map<String, String> getNamesAndFields(Class<?> clazz) {
        Map<String, String> map = new HashMap<>();
        Field[] fields = clazz.getDeclaredFields();
        for (Field field : fields) {
            if (field.isAnnotationPresent(JdbcField.class) && !field.isAnnotationPresent(JdbcAutoGenerated.class)) {
                JdbcField jdbcField = field.getAnnotation(JdbcField.class);
                map.put(jdbcField.value(), field.getName());
            }
        }
        return map;
    }

    public static String getIdColumnName(Class<?> clazz) throws EntityException {
        int count = 0;
        String id = null;
        Field[] fields = clazz.getDeclaredFields();
        for (Field field : fields) {
            if (field.isAnnotationPresent(JdbcId.class)) {
                count++;
                if (field.isAnnotationPresent(JdbcField.class)) {
                    JdbcField jdbcField = field.getAnnotation(JdbcField.class);
                    id = jdbcField.value();
                }
            }
        }
        if (count < 1)
            throw new EntityException("Id not found");
        if (count > 1)
            throw new EntityException("Ids more than 1");
        return id;
    }

    public static String getTableName(Class<?> clazz) {
        return clazz.getAnnotation(JdbcTable.class).value();
    }
}
